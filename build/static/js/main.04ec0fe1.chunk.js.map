{"version":3,"sources":["Components/WrongAnswer.js","Components/CorrectAnswer.js","Components/NoAnswer.js","Components/ComparingAnswers.js","App.js","serviceWorker.js","index.js"],"names":["WrongAnswer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","show","react_default","a","createElement","style","textAlign","color","React","Component","CorrectAnswer","NoAnswer","ComparingAnswers","value","displayToUser","states","Berlin","Bavaria","Bremen","Saxony","Saxony-Anhalt","Hesse","Hamburg","Baden-W端rttemberg","Lower Saxony","North Rhine-Westphalia","Schleswig-Holstein","Mecklenburg-Vorpommern","Brandenburg","Saarland","Thuringia","Rhineland-Palatinate","index","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","target","preventDefault","checkResult","input","WrongAnswer_WrongAnswer","CorrectAnswer_CorrectAnswer","NoAnswer_NoAnswer","Math","floor","random","values","_this2","keys","onSubmit","type","marginLeft","ref","background","App","handleShow","handleClose","className","bsSize","textShadowColor","fontWeight","fontFamily","fontStyle","fontSize","Button","bsStyle","onClick","borderColor","position","marginTop","Modal","key","onHide","Header","closeButton","Title","Body","height","Footer","marginBottom","Components_ComparingAnswers","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04ec0fe1.chunk.js","sourcesContent":["import React from 'react';\n\n\n\nexport default class WrongAnswer extends React.Component {\n\n    constructor(props){\n        super(props)\n    \n        this.state = {\n          show:false\n          \n        }\n      }\n\n    render () {\n        return (\n                <div>\n                    <h3 style={{textAlign:'center', color: 'red'}}>Your answer is wrong.</h3>\n\n              </div>\n        );\n    }\n}","import React from 'react';\n\n\n\nexport default class CorrectAnswer extends React.Component {\n\n    constructor(props){\n        super(props)\n    \n        this.state = {\n          show:false\n          \n        }\n      }\n\n    render () {\n        return (\n                <div>\n                    <h3 style={{textAlign:'center', color: '#D2F5E3'}}>Your answer is correct!</h3>\n\n              </div>\n        );\n    }\n}","import React from 'react';\n\n\n\nexport default class NoAnswer extends React.Component {\n\n    constructor(props){\n        super(props)\n    \n        this.state = {\n          show:false\n          \n        }\n      }\n\n    render () {\n        return (\n                <div>\n                    <h3 style={{textAlign:'center', color: 'red'}}>There is no answer yet.</h3>\n\n              </div>\n        );\n    }\n}","import React from 'react';\nimport WrongAnswer from './WrongAnswer.js';\nimport CorrectAnswer from './CorrectAnswer.js';\nimport NoAnswer from './NoAnswer.js';\nimport { Button } from 'react-bootstrap';\n\n\n\n\n\nclass ComparingAnswers extends React.Component {\n    constructor(props){\n        super(props);        \n        this.state = {\n            value: '',\n            displayToUser : ''\n        };        \n        this.states = {\n            'Berlin' : 'Berlin',\n            'Bavaria' : 'Munich',\n            'Bremen' : 'Bremen',\n            'Saxony' : 'Dresden',\n            'Saxony-Anhalt' : 'Magdeburg',\n            'Hesse' : 'Wiesbaden',\n            'Hamburg' : 'Hamburg',\n            'Baden-W端rttemberg' : 'Stuttgart',\n            'Lower Saxony' : 'Hannover',\n            'North Rhine-Westphalia' : 'D端sseldorf',\n            'Schleswig-Holstein' : 'Kiel',\n            'Mecklenburg-Vorpommern' : 'Schwerin',\n            'Brandenburg' : 'Potsdam',\n            'Saarland' : 'Saarbr端cken',\n            'Thuringia' : 'Erfurt',\n            'Rhineland-Palatinate' : 'Mainz'\n        };\n        this.index = \"\";\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        }\n\n        handleChange(e) {\n            this.setState({value: e.target.value});\n        }\n\n        handleSubmit(e) {\n            //alert('The value is: ' + this.input.value);                    \n            e.preventDefault();                 \n            switch(this.checkResult(this.input.value)){\n                case 0: this.setState({displayToUser : <WrongAnswer /> });\n                break;\n                case 1: this.setState({displayToUser : <CorrectAnswer /> }); \n                break;\n                default: this.setState({displayToUser : <NoAnswer /> }); \n                break;\n\n            }       \n          }\n\n\n        random(){\n            return Math.floor(Math.random()*16);\n        }\n\n        checkResult(value) {                        \n            if (value === Object.values(this.states)[this.index]) {\n                return 1;\n            } else if (value == \"\") {\n                return -1;\n            }\n            else return 0;\n\n        }\n                \n        render(){\n\n   \n        this.index = this.random();  \n\n        return (\n            <div>           \n          <h2 style={{textAlign:'center'}}>Please write the capital of {Object.keys(this.states)[this.index]} </h2>\n          <form onSubmit={this.handleSubmit} style={{textAlign:'center'}}>\n          <input type=\"text\" style={{color: '#093797', marginLeft: '30px'}} ref={(input) => this.input = input}/>\n          <input type=\"submit\" style={{color: '#093797', background: '#FFFFFF'}}  />\n          </form>\n      \n                  {this.state.displayToUser}\n      \n            </div>\n          );\n        }\n    }\n    export default ComparingAnswers;","import React from 'react';\nimport { Button , Modal} from 'react-bootstrap';\nimport './App.css';\nimport ComparingAnswers  from './Components/ComparingAnswers.js';\n\n\n\nexport default class App extends React.Component {\n\n    constructor(props){\n        super(props)\n    \n        this.state = {\n          show:false\n          \n        }\n    \n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        \n      }\n\n      handleShow(){\n        this.setState({\n          show:true\n        })\n      }\n    \n      handleClose() {\n        this.setState({ show: false });\n      }\n    \n    render () {\n        return (\n                <div className=\"App-header\">\n                    <h1 bsSize=\"lg\" style={{color: '#FFFFFF', textAlign: 'center', textShadowColor: '#FFFFFF', fontWeight: 'bold', fontFamily: 'Apple Chancery', fontStyle: 'Italic', fontSize: '90px'}}>Learn german states</h1>\n                    <h3 style={{textAlign:'center'}}>This app can help you to learn all the german states and capitals in easy way! Try now!</h3>\n                   <Button bsSize=\"lg\" bsStyle=\"primary\" onClick={this.handleShow} style={{background: '#FFFFFF', color: '#093797', borderColor: '#F6E686', position:\"absolute\", marginTop: '10px', marginLeft: '10px'}}>Contact US</Button>\n                   <Modal key=\"modal2\" show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>Contact Us</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                    <div style={{height: 120, marginTop:\"20px\"}} className=\"col-md-12\">\n                    <h3>Wilhelmine-Reichard-Weg 9</h3>\n                    <h3>Boeblingen, 71034</h3>\n                    <h2>Elena Gette</h2>\n                    </div>\n                    </Modal.Body>\n                    <Modal.Footer style={{marginBottom:\"0px\"}}>\n                    <Button style={{marginTop:\"25px\"}} \n                    onClick={this.handleClose}>Close</Button>\n        \n                    </Modal.Footer>\n              </Modal> \n              \n\n              \n                    <ComparingAnswers />\n                   \n\n                    \n              </div>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}